{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times};}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Helvetica};}
{\f54\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow{\*\falt Franklin Gothic Medium Cond};}{\f89\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}AvantGarde{\*\falt Century Gothic};}
{\f127\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter GothicPS{\*\falt Times New Roman};}{\f130\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times};}{\f131\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times};}
{\f133\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times};}{\f134\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times};}{\f135\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Times};}
{\f136\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Times};}{\f137\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times};}{\f138\fswiss\fcharset238\fprq2 Arial CE{\*\falt Helvetica};}
{\f139\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Helvetica};}{\f141\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Helvetica};}{\f142\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Helvetica};}{\f143\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Helvetica};}
{\f144\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Helvetica};}{\f145\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Helvetica};}{\f562\fswiss\fcharset238\fprq2 Arial Narrow CE{\*\falt Franklin Gothic Medium Cond};}
{\f563\fswiss\fcharset204\fprq2 Arial Narrow Cyr{\*\falt Franklin Gothic Medium Cond};}{\f565\fswiss\fcharset161\fprq2 Arial Narrow Greek{\*\falt Franklin Gothic Medium Cond};}
{\f566\fswiss\fcharset162\fprq2 Arial Narrow Tur{\*\falt Franklin Gothic Medium Cond};}{\f569\fswiss\fcharset186\fprq2 Arial Narrow Baltic{\*\falt Franklin Gothic Medium Cond};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{
\s1\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{
\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Author Bio;}{\*\cs16 \additive \b\f0\fs24 Body Text Bold;}{
\s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 Resources;}{\s18\qj \li0\ri0\widctlpar\tx360\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext18 \sautoupd BodyText;}{\*\cs19 \additive \b\i\f0\fs24 \sbasedon10 BodyText Bold-Italic;}{\*\cs20 \additive \i\f0 \sbasedon10 BodyTextItalic;}{
\s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext21 BoldCaption/Heading;}{\*\cs22 \additive \f1 Byline;}{
\s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 Captions;}{\s24\ql \li0\ri4320\widctlpar
\tx360\aspalpha\aspnum\faauto\adjustright\rin4320\lin0\itap0 \f127\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext24 \sautoupd Codeinline;}{
\s25\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext25 Dateline;}{\*\cs26 \additive \b\caps\f1\fs28 \sbasedon10 DropCap;}{
\s27\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext27 Subhead;}{\s28\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon27 \snext28 EditResponse;}{\*\cs29 \additive \i \sbasedon10 Emphasis;}{\*\cs30 \additive \b\f1\fs32 FeatHead;}{
\s31\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext31 FeatureDek;}{\s32\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext32 For This Solution;}{\s33\qr \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext33 Letter Names;}{\s34\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext34 Listing/Table/Sidebar Heading;}{\s35\ql \li0\ri3240\widctlpar
\tx360\aspalpha\aspnum\faauto\adjustright\rin3240\lin0\itap0 \f127\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd ListingText;}{\s36\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\b\f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext36 NewProductsCompanyName;}{\s37\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext37 NewProductsHead;}{\s38\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext38 NewProductsText;}{
\s39\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f54\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext39 Overline;}{\s40\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\b\f89\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext40 Pullquote;}{\s41\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext41 
Subtitle;}{\*\cs42 \additive \f1\fs28 \sbasedon10 TextOpening Larger;}{\s43\qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext43 Title;}}{\info
{\title \'a9 2001 Visual Studio Magazine }{\author Travis Vandersypen}{\operator Nicole Pizzurro}{\creatim\yr2005\mo5\dy12\hr13\min53}{\revtim\yr2005\mo5\dy12\hr13\min54}{\version3}{\edmins1}{\nofpages3}{\nofwords575}{\nofchars3278}
{\*\company Fawcette Tech Publications}{\nofcharsws0}{\vern8269}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale189\viewzk2\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\s34\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {C#\tab Encapsulate the Google Web APIs
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b Listing 1\tab }{Use the GoogleIt .NET user control to access the Google Web API. GoogleIt uses 
helper methods for building the query string, formatting the results in a data grid, and displaying errors in the GUI. It\rquote 
s best practice to encapsulate functionality in this manner to increase design reusability and ease of use. The code shown here is a condensed version; download the full example from the }{\i VSM}{ Web site.
\par }\pard\plain \s35\ql \li0\ri3240\widctlpar\tx360\aspalpha\aspnum\faauto\adjustright\rin3240\lin0\itap0 \f127\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par \tab public class GoogleIt : System.Web.UI.UserControl
\par \tab \{
\par \tab // You need to have a license key to access the Google Web API
\par 
\par \tab \tab private const string LICENSE_KEY = 
\par \tab \tab \tab "Your License Key Goes Here";
\par \tab \tab 
\par \tab \tab private void btnSearch_Click(object sender, 
\par \tab \tab System.EventArgs e)
\par \tab \tab \{
\par \tab \tab \tab try 
\par \tab \tab \tab \{
\par \tab \tab \tab \tab GoogleHandler();
\par \tab \tab \tab \}
\par \tab \tab \tab catch (System.Web.Services
\par \tab \tab \tab \tab .Protocols.SoapException ex) 
\par \tab \tab \tab \{
\par \tab \tab \tab \tab ShowErrorMessage(ex.ToString(), 
\par \tab \tab \tab \tab \tab true); 
\par \tab \tab \tab \}
\par \tab \tab \tab catch (System.Exception ex)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab ShowErrorMessage(ex.ToString(),true);
\par \tab \tab \tab \}
\par \tab \tab \}
\par \tab \tab private void GoogleHandler()
\par \tab \tab \{
\par \tab \tab \tab // Create a Google Search object
\par \tab \tab \tab GoogleSearchService gss 
\par \tab \tab \tab \tab = new GoogleSearchService();
\par 
\par \tab \tab \tab // Invoke the search method
\par \tab \tab \tab GoogleSearchResult results = 
\par \tab \tab \tab \tab gss.doGoogleSearch(LICENSE_KEY, 
\par \tab \tab \tab \tab \tab BuildQuery(), 0, 10, false, 
\par \tab \tab \tab \tab \tab \tab string.Empty,  false, \tab \tab \tab \tab \tab \tab \tab \tab string.Empty, string.Empty, \tab \tab \tab \tab \tab \tab \tab \tab string.Empty);
\par \tab \tab \tab \tab 
\par \tab \tab \tab // Display the estimated number of results 
\par \tab \tab \tab lblResults.Text = "Results Found: " + \tab \tab \tab \tab \tab results.estimatedTotalResultsCount;
\par \tab \tab \tab lblResults.Visible = true;
\par 
\par \tab \tab \tab DataTable table = new DataTable();
\par \tab \tab \tab DataColumn col1 = 
\par \tab \tab \tab \tab new DataColumn("Results", \tab 
\par \tab \tab \tab \tab typeof(string));
\par 
\par \tab \tab \tab table.Columns.Add(col1);
\par 
\par \tab \tab \tab int pointer = 0;
\par \tab \tab \tab \tab 
\par \tab \tab \tab while(pointer<results.resultElements.Length)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab DataRow row = table.NewRow();
\par \tab \tab \tab \tab row[0] = \tab 
\par \tab \tab \tab \tab \tab FormatResults(
\par \tab \tab \tab \tab \tab results.resultElements[
\par \tab \tab \tab \tab \tab pointer]);
\par \tab \tab \tab \tab table.Rows.Add(row);
\par \tab \tab \tab \tab pointer ++; 
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab dgResults.DataSource = table;
\par \tab \tab \tab dgResults.DataBind();
\par \tab \tab \}
\par \tab \tab private void ShowErrorMessage(string msg, 
\par \tab \tab \tab bool bShow)
\par \tab \tab \{
\par \tab \tab \tab if (bShow == true)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab lblError.Text = "<br>" + msg;
\par \tab \tab \tab \tab lblError.Visible = true;
\par \tab \tab \tab \}
\par \tab \tab \tab else
\par \tab \tab \tab \{
\par \tab \tab \tab \tab lblError.Visible = false;
\par \tab \tab \tab \}
\par \tab \tab \}
\par \tab \tab private string BuildQuery()
\par \tab \tab \{
\par \tab \tab \tab StringBuilder query = new StringBuilder();
\par \tab \tab \tab if(txtBasicSearch.Text.Length > 0)
\par \tab \tab \tab \tab query.Append(txtBasicSearch.Text);
\par \tab \tab \tab else
\par \tab \tab \tab \tab throw new Exception(
\par \tab \tab \tab \tab \tab "You have to specify a basic search criteria");
\par \tab \tab \tab 
\par \tab \tab \tab if(txtSite.Text.Length > 0)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab query.Append(" site:");
\par \tab \tab \tab \tab query.Append(txtSite.Text);
\par \tab \tab \tab \}
\par \tab \tab \tab 
\par \tab \tab \tab if(txtFilter.Text.Length > 0)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab query.Append(" filetype:");
\par \tab \tab \tab \tab query.Append(txtFilter.Text);
\par \tab \tab \tab \}
\par \tab \tab \tab 
\par \tab \tab \tab string txtDateFrom = 
\par \tab \tab \tab \tab Request.Form.Get("txtDateFrom");
\par \tab \tab \tab string txtDateTo = 
\par \tab \tab \tab \tab Request.Form.Get("txtDateTo");
\par 
\par \tab \tab \tab if(txtDateFrom.Length > 0 && 
\par \tab \tab \tab \tab txtDateTo.Length > 0)
\par \tab \tab \tab \{
\par \tab \tab \tab \tab // Find the GregToJulian() method when\tab \tab \tab \tab // you download this sample code
\par \tab \tab \tab \tab string fromDateJul = \tab \tab \tab \tab \tab \tab \tab GregToJulian(txtDateFrom);
\par \tab \tab \tab \tab string toDateJul = \tab \tab \tab \tab \tab \tab \tab GregToJulian(txtDateTo);
\par 
\par \tab \tab \tab \tab query.Append(" daterange:");
\par \tab \tab \tab \tab query.Append(fromDateJul);
\par \tab \tab \tab \tab query.Append("-");
\par \tab \tab \tab \tab query.Append(toDateJul); 
\par \tab \tab \tab \}
\par 
\par \tab \tab \tab return query.ToString();\tab \tab 
\par \tab \tab \}
\par \tab \tab private string FormatResults(ResultElement \tab \tab \tab \tab resultToFormat)
\par \tab \tab \{
\par \tab \tab \tab StringBuilder sb = new StringBuilder();
\par \tab \tab \tab sb.Append("<p><b><u><a href=");
\par \tab \tab \tab sb.Append(resultToFormat.URL);
\par \tab \tab \tab sb.Append(" target=new>");
\par \tab \tab \tab sb.Append(resultToFormat.title);
\par \tab \tab \tab sb.Append("</a></u></b></p>");
\par \tab \tab \tab sb.Append("<p>");
\par \tab \tab \tab sb.Append(resultToFormat.snippet);
\par \tab \tab \tab sb.Append("<br>");
\par \tab \tab \tab sb.Append(resultToFormat.URL);
\par \tab \tab \tab sb.Append("&nbsp;");
\par \tab \tab \tab sb.Append(resultToFormat.cachedSize);
\par \tab \tab \tab sb.Append("</p>");\tab \tab \tab 
\par \tab \tab \tab 
\par \tab \tab \tab return sb.ToString();
\par \tab \tab \}
\par \tab \}
\par \}
\par 
\par }}